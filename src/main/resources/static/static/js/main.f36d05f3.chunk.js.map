{"version":3,"sources":["components/SearchBar.tsx","components/Header.tsx","components/GameFilter.tsx","components/MatchHistory.tsx","config/config.ts","services/riotService.ts","components/SummonerProfile.tsx","components/SummonerContent.tsx","components/NavigationTabs.tsx","data/champions.ts","components/ChampionCard.tsx","services/championService.ts","components/ChampionAnalysis.tsx","App.tsx","index.tsx"],"names":["SearchBar","_ref","onSearch","summonerName","setSummonerName","useState","_jsxs","onSubmit","e","preventDefault","trim","className","children","_jsx","type","value","onChange","target","placeholder","Header","handleHomeClick","window","location","href","onClick","handleChampionAnalysisClick","src","alt","width","height","GameFilter","MatchHistory","matches","expandedMatch","setExpandedMatch","map","match","participant","searchedPuuid","info","participants","puuid","find","p","findPlayerParticipant","concat","win","toggleMatchDetails","matchId","metadata","championName","kills","deaths","assists","Math","max","toFixed","floor","gameDuration","Date","gameCreation","toLocaleDateString","items","itemId","index","cs","goldEarned","toLocaleString","config","RIOT_API_KEY","RIOT_API_BASE_URL","API_BASE_URL","RiotService","constructor","headers","getSummonerByName","axios","get","encodeURIComponent","data","error","console","getMatchList","start","arguments","length","undefined","count","this","params","getMatchDetails","getMatchHistory","encodedName","log","withCredentials","isAxiosError","_error$response","message","response","status","Error","getSummonerRank","summonerId","getCurrentGame","_error$response2","SummonerProfile","summoner","setSummoner","rank","setRank","currentGame","setCurrentGame","riotService","name","tag","split","useEffect","async","summonerData","rankData","id","gameData","loadSummonerData","profileIconId","summonerLevel","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeDasharray","strokeLinejoin","SummonerContent","tier","toLowerCase","leaguePoints","wins","losses","NavigationTabs","onTabChange","activeTab","setActiveTab","handleTabClick","tab","filterChampions","champions","initial","position","searchTerm","filter","champion","text","code","charCodeAt","getInitialSound","nameKo","positions","includes","searchLower","ChampionCard","imageUrl","winRate","pickRate","banRate","ChampionAnalysis","setChampions","filteredChampions","setFilteredChampions","selectedInitial","setSelectedInitial","setFilter","setSearchTerm","sortBy","setSortBy","isLoading","setIsLoading","setError","stats","process","_objectSpread","Number","getChampionStats","err","fetchChampionStats","filtered","sortChampions","sort","a","b","localeCompare","handleChampionClick","_Fragment","pos","title","App","setMatches","path","pathname","matchHistory","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f36d05f3.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// SearchBar 컴포넌트의 props 타입 정의\r\ninterface SearchBarProps {\r\n    onSearch: (summonerName: string) => void; // 검색 실행 함수\r\n}\r\n\r\n// SearchBar 컴포넌트\r\nexport const SearchBar: React.FC<SearchBarProps> = ({ onSearch }) => {\r\n    // 입력된 소환사명을 저장할 상태\r\n    const [summonerName, setSummonerName] = useState('');\r\n\r\n\r\n    // 폼 제출 처리 함수\r\n    const handleSubmit = (e: React.FormEvent) => {\r\n        e.preventDefault(); // 기본 폼 제출 동작 방지\r\n        if (summonerName.trim()) {\r\n            onSearch(summonerName); // 부모 컴포넌트의 검색 함수 호출\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"search-bar\">\r\n            <input\r\n                type=\"text\"\r\n                value={summonerName}\r\n                // 입력값이 변경될 때마다 상태 업데이트\r\n                onChange={(e) => setSummonerName(e.target.value)}\r\n                placeholder=\"소환사명#태그 (예: Hide on bush#KR1)\"\r\n                aria-label=\"소환사 검색\"\r\n            />\r\n            <button type=\"submit\">검색</button>\r\n        </form>\r\n    );\r\n};","import React from 'react';\nimport { SearchBar } from './SearchBar';\nimport './Header.css';\n\ninterface HeaderProps {\n    onSearch: (summonerName: string) => void;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ onSearch }) => {\n    const handleHomeClick = () => {\n        window.location.href = '/';  // 루트 경로로 이동\n    };\n\n    const handleChampionAnalysisClick = () => {\n        window.location.href = '/champions';  // 챔피언 분석 페이지로 이동\n    };\n\n    return (\n        <header className=\"app-header\">\n            <div className=\"header-container\">\n                <div className=\"header-left\">\n                    <h1 className=\"logo\" onClick={handleHomeClick}>META.XG</h1>\n                    <nav className=\"main-nav\">\n                        <button className=\"nav-btn active\" onClick={handleHomeClick}>홈</button>\n                        <button className=\"nav-btn\" onClick={handleChampionAnalysisClick}>챔피언 분석</button>\n                        <button className=\"nav-btn\">랭킹</button>\n                        <button className=\"nav-btn\">멀티서치</button>\n                    </nav>\n                </div>\n                <div className=\"header-center\">\n                    <SearchBar onSearch={onSearch} />\n                </div>\n                <div className=\"header-right\">\n                    <button className=\"setting-btn mode-toggle\">\n                        <img src=\"/images/ico_moon.svg\" alt=\"다크모드\" width=\"20\" height=\"20\" />\n                    </button>\n                    <button className=\"setting-btn language-toggle\">\n                        <img src=\"/images/ico_globe.svg\" alt=\"언어 변경\" width=\"20\" height=\"20\" />\n                    </button>\n                </div>\n            </div>\n        </header>\n    );\n};\n","import React from 'react';\r\nimport './GameFilter.css';\r\n\r\nexport const GameFilter: React.FC = () => {\r\n    return (\r\n        <div className=\"game-filter\">\r\n            <div className=\"queue-filters\">\r\n                <button className=\"filter-btn active\">전체</button>\r\n                <button className=\"filter-btn\">솔로랭크</button>\r\n                <button className=\"filter-btn\">자유랭크</button>\r\n                <button className=\"filter-btn\">빠른대전</button>\r\n                <button className=\"filter-btn\">칼바람나락</button>\r\n            </div>\r\n            <div className=\"champion-search\">\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"챔피언 검색\"\r\n                    className=\"champion-input\"\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}; ","import React, { useState } from 'react';\nimport './MatchHistory.css';\nimport { Match } from '../types/Match';\nimport { GameFilter } from './GameFilter';\n\ninterface MatchHistoryProps {\n    matches: Match[];\n}\n\nexport const MatchHistory: React.FC<MatchHistoryProps> = ({ matches }) => {\n    const [expandedMatch, setExpandedMatch] = useState<string | null>(null);\n    \n    const handleQueueFilterChange = (queueType: string) => {\n        // 큐 타입 필터링 로직\n        console.log('Queue filter:', queueType);\n    };\n\n    const handleChampionSearch = (championName: string) => {\n        // 챔피언 검색 로직\n        console.log('Champion search:', championName);\n    };\n\n    const toggleMatchDetails = (matchId: string) => {\n        setExpandedMatch(expandedMatch === matchId ? null : matchId);\n    };\n\n    // 검색한 소환사의 puuid로 해당 참가자 정보 찾기\n    const findPlayerParticipant = (match: Match) => {\n        const searchedPuuid = matches[0].info.participants[0].puuid; // 첫 번째 매치에서 검색된 소환사의 puuid 가져오기\n        return match.info.participants.find(p => p.puuid === searchedPuuid);\n    };\n\n    return (\n        <div className=\"match-history\">\n            <GameFilter />\n            <div className=\"match-list\">\n                {matches.map((match) => {\n                    const participant = findPlayerParticipant(match);\n                    if (!participant) return null; // 참가자를 찾지 못한 경우 렌더링하지 않음\n\n                    return (\n                        <div \n                            key={match.metadata.matchId} \n                            className={`match-card ${participant.win ? 'victory' : 'defeat'}`}\n                            onClick={() => toggleMatchDetails(match.metadata.matchId)}\n                        >\n                            <div className=\"match-info\">\n                                <div className=\"champion-info\">\n                                    <img \n                                        src={`http://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/${participant.championName}.png`}\n                                        alt={participant.championName}\n                                        className=\"champion-icon\"\n                                    />\n                                    <span>{participant.championName}</span>\n                                </div>\n                                <div className=\"game-stats\">\n                                    <div className=\"kda\">\n                                        {participant.kills} / {participant.deaths} / {participant.assists}\n                                    </div>\n                                    <div className=\"kda-ratio\">\n                                        {((participant.kills + participant.assists) / Math.max(1, participant.deaths)).toFixed(2)} KDA\n                                    </div>\n                                </div>\n                                <div className=\"game-info\">\n                                    <div>{participant.win ? '승리' : '패배'}</div>\n                                    <div>{Math.floor(match.info.gameDuration / 60)}분</div>\n                                    <div>{new Date(match.info.gameCreation).toLocaleDateString()}</div>\n                                </div>\n                            </div>\n                            {expandedMatch === match.metadata.matchId && (\n                                <div className=\"match-details\">\n                                    <div className=\"items\">\n                                        {participant.items.map((itemId, index) => (\n                                            <img \n                                                key={index}\n                                                src={`http://ddragon.leagueoflegends.com/cdn/13.1.1/img/item/${itemId}.png`}\n                                                alt={`Item ${itemId}`}\n                                            />\n                                        ))}\n                                    </div>\n                                    <div className=\"additional-stats\">\n                                        <p>CS: {participant.cs} ({(participant.cs / (match.info.gameDuration / 60)).toFixed(1)})</p>\n                                        <p>Gold: {participant.goldEarned.toLocaleString()}</p>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};","const isDevelopment = process.env.NODE_ENV === 'development';\r\n\r\n// API 관련 설정값들\r\nexport const config = {\r\n    RIOT_API_KEY: 'RGAPI-b036156f-fe4b-45e1-a7df-f0cab0392c6c', \r\n    RIOT_API_BASE_URL: 'https://kr.api.riotgames.com',\r\n    API_BASE_URL: process.env.NODE_ENV === 'development' ? 'http://localhost:8080' : ''\r\n};\r\n","import axios from 'axios';\r\nimport { config } from '../config/config';\r\n\r\nexport class RiotService {\r\n    private readonly headers = {\r\n        'X-Riot-Token': config.RIOT_API_KEY\r\n    };\r\n\r\n    async getSummonerByName(summonerName: string) {\r\n        try {\r\n            const response = await axios.get(\r\n                `${config.API_BASE_URL}/api/summoner/${encodeURIComponent(summonerName)}`,\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching summoner:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getMatchList(puuid: string, start = 0, count = 20) {\r\n        try {\r\n            const response = await axios.get(\r\n                `${config.RIOT_API_BASE_URL}/lol/match/v5/matches/by-puuid/${puuid}/ids`,\r\n                {\r\n                    headers: this.headers,\r\n                    params: { start, count }\r\n                }\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching match list:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getMatchDetails(matchId: string) {\r\n        try {\r\n            const response = await axios.get(\r\n                `${config.RIOT_API_BASE_URL}/lol/match/v5/matches/${matchId}`,\r\n                { headers: this.headers }\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching match details:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getMatchHistory(summonerName: string) {\r\n        try {\r\n            const encodedName = encodeURIComponent(summonerName.trim());\r\n            console.log('Requesting:', `${config.API_BASE_URL}/api/matches/by-summoner/${encodedName}`);\r\n            \r\n            const response = await axios.get(\r\n                `${config.API_BASE_URL}/api/matches/by-summoner/${encodedName}`,\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    },\r\n                    withCredentials: true\r\n                }\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error)) {\r\n                console.error('API 호출 중 오류:', error.message);\r\n                if (error.response?.status === 404) {\r\n                    throw new Error('소환사를 찾을 수 없습니다.');\r\n                }\r\n                throw new Error('서버 오류가 발생했습니다.');\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getSummonerRank(summonerId: string) {\r\n        try {\r\n            const response = await axios.get(\r\n                `${config.API_BASE_URL}/api/summoner/rank/${summonerId}`,\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching summoner rank:', error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    async getCurrentGame(summonerId: string) {\r\n        try {\r\n            const response = await axios.get(\r\n                `${config.API_BASE_URL}/api/summoner/current-game/${summonerId}`,\r\n                {\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            return response.data;\r\n        } catch (error) {\r\n            if (axios.isAxiosError(error) && error.response?.status === 404) {\r\n                return null; // 게임 중이 아님\r\n            }\r\n            console.error('Error fetching current game:', error);\r\n            throw error;\r\n        }\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\nimport { RiotService } from '../services/riotService';\nimport { SummonerContent } from './SummonerContent';\nimport './SummonerProfile.css';\n\ninterface SummonerProfileProps {\n    summonerName: string;\n}\n\nexport const SummonerProfile: React.FC<SummonerProfileProps> = ({ summonerName }) => {\n    const [summoner, setSummoner] = useState<any>(null);\n    const [rank, setRank] = useState<any>(null);\n    const [currentGame, setCurrentGame] = useState<any>(null);\n    const riotService = new RiotService();\n\n    // 소환사 이름과 태그 분리\n    const [name, tag] = summonerName.split('#');\n\n    useEffect(() => {\n        const loadSummonerData = async () => {\n            try {\n                const summonerData = await riotService.getSummonerByName(summonerName);\n                setSummoner(summonerData);\n\n                const rankData = await riotService.getSummonerRank(summonerData.id);\n                setRank(rankData);\n\n                const gameData = await riotService.getCurrentGame(summonerData.id);\n                setCurrentGame(gameData);\n            } catch (error) {\n                console.error('Error loading summoner data:', error);\n            }\n        };\n\n        loadSummonerData();\n    }, [summonerName]);\n\n    if (!summoner) return null;\n\n    const getWinRate = () => {\n        if (!rank) return null;\n        return ((rank.wins / (rank.wins + rank.losses)) * 100).toFixed(1);\n    };\n\n    return (\n        <div className=\"profile-header\">\n            <div className=\"profile-icon\">\n                <img \n                    src={`https://ak-deeplol-ddragon-cdn.deeplol.gg/cdn/img/profileicon/${summoner.profileIconId}__100.webp`}\n                    alt={summoner.name}\n                />\n                <span className=\"level\">{summoner.summonerLevel}</span>\n            </div>\n            <div className=\"profile-info\">\n                <div className=\"name-update\">\n                    <div className=\"name\">\n                        <span>{name}</span>\n                        <span className=\"tag\">#{tag}</span>\n                    </div>\n                    <div className=\"buttons\">\n                        <button className=\"update-btn\">\n                            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n                                <path d=\"M2 12C2 6.47715 6.47715 2 12 2\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeDasharray=\"1 4\"/>\n                                <path d=\"M2 4L5 7M5 7L8 4M5 7V4\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                            </svg>\n                            <span>전적 갱신</span>\n                        </button>\n                        <button className=\"favorite-btn\">\n                            <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M12 2L15.09 8.26L22 9.27L17 14.14L18.18 21.02L12 17.77L5.82 21.02L7 14.14L2 9.27L8.91 8.26L12 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n                            </svg>\n                            <span>즐겨찾기</span>\n                        </button>\n                    </div>\n                </div>\n                <div className=\"last-update\">\n                    <span>최근 갱신: 방금 전</span>\n                </div>\n            </div>\n        </div>\n    );\n};","import React from 'react';\r\nimport './SummonerContent.css';\r\n\r\ninterface SummonerContentProps {\r\n    rank: any;\r\n    currentGame: any;\r\n}\r\n\r\nexport const SummonerContent: React.FC<SummonerContentProps> = ({ rank, currentGame }) => {\r\n    const getWinRate = () => {\r\n        if (!rank) return null;\r\n        return ((rank.wins / (rank.wins + rank.losses)) * 100).toFixed(1);\r\n    };\r\n\r\n    return (\r\n        <div className=\"summoner-content\">\r\n            <div className=\"rank-section\">\r\n                <div className=\"rank-header\">\r\n                    <span>솔로 랭크</span>\r\n                    {!rank && <span className=\"unranked\">Unranked</span>}\r\n                </div>\r\n                {rank && (\r\n                    <div className=\"rank-info\">\r\n                        <div className=\"tier-emblem\">\r\n                            <img \r\n                                src={`https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-static-assets/global/default/ranked-emblem/emblem-${rank.tier.toLowerCase()}.png`}\r\n                                alt={rank.tier}\r\n                            />\r\n                        </div>\r\n                        <div className=\"rank-details\">\r\n                            <div className=\"tier-info\">\r\n                                <span className=\"tier\">{rank.tier} {rank.rank}</span>\r\n                                <span className=\"lp\">{rank.leaguePoints} LP</span>\r\n                            </div>\r\n                            <div className=\"record\">\r\n                                <span className=\"wins\">{rank.wins}승</span>\r\n                                <span className=\"losses\">{rank.losses}패</span>\r\n                                <span className=\"win-rate\">승률 {getWinRate()}%</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { useState } from 'react';\r\nimport './NavigationTabs.css';\r\n\r\ntype TabType = 'overview' | 'champions' | 'ingame';\r\n\r\ninterface NavigationTabsProps {\r\n    onTabChange: (tab: TabType) => void;\r\n}\r\n\r\nexport const NavigationTabs: React.FC<NavigationTabsProps> = ({ onTabChange }) => {\r\n    const [activeTab, setActiveTab] = useState<TabType>('overview');\r\n\r\n    const handleTabClick = (tab: TabType) => {\r\n        setActiveTab(tab);\r\n        onTabChange(tab);\r\n    };\r\n\r\n    return (\r\n        <div className=\"navigation-tabs\">\r\n            <div className=\"tab-buttons\">\r\n                <button \r\n                    className={`tab ${activeTab === 'overview' ? 'active' : ''}`}\r\n                    onClick={() => handleTabClick('overview')}\r\n                >\r\n                    종합\r\n                </button>\r\n                <button \r\n                    className={`tab ${activeTab === 'champions' ? 'active' : ''}`}\r\n                    onClick={() => handleTabClick('champions')}\r\n                >\r\n                    챔피언\r\n                </button>\r\n                <button \r\n                    className={`tab ${activeTab === 'ingame' ? 'active' : ''}`}\r\n                    onClick={() => handleTabClick('ingame')}\r\n                >\r\n                    인게임\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}; ","export interface Champion {\r\n    id: string;\r\n    name: string;\r\n    nameKo: string;\r\n    title: string;\r\n    imageUrl: string;\r\n    winRate: number;\r\n    pickRate: number;\r\n    banRate: number;\r\n    tier: string;\r\n    positions: string[];\r\n}\r\n\r\nexport const champions: Champion[] = [\r\n    {\r\n        id: \"Aatrox\",\r\n        name: \"Aatrox\",\r\n        nameKo: \"아트록스\",\r\n        title: \"다르킨의 검\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Aatrox.png\",\r\n        winRate: 49.8,\r\n        pickRate: 8.2,\r\n        banRate: 4.5,\r\n        tier: \"A\",\r\n        positions: [\"탑\"]\r\n    },\r\n    {\r\n        id: \"Ahri\",\r\n        name: \"Ahri\",\r\n        nameKo: \"아리\",\r\n        title: \"구미호\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Ahri.png\",\r\n        winRate: 51.2,\r\n        pickRate: 12.5,\r\n        banRate: 8.3,\r\n        tier: \"S\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Akali\",\r\n        name: \"Akali\",\r\n        nameKo: \"아칼리\",\r\n        title: \"그림자의 암살자\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Akali.png\",\r\n        winRate: 48.5,\r\n        pickRate: 9.8,\r\n        banRate: 12.1,\r\n        tier: \"A\",\r\n        positions: [\"미드\", \"탑\"]\r\n    },\r\n    {\r\n        id: \"Akshan\",\r\n        name: \"Akshan\",\r\n        nameKo: \"아크샨\",\r\n        title: \"방랑자 감시자\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Akshan.png\",\r\n        winRate: 50.1,\r\n        pickRate: 3.2,\r\n        banRate: 1.5,\r\n        tier: \"B\",\r\n        positions: [\"미드\", \"탑\"]\r\n    },\r\n    {\r\n        id: \"Alistar\",\r\n        name: \"Alistar\",\r\n        nameKo: \"알리스타\",\r\n        title: \"미노타우로스\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Alistar.png\",\r\n        winRate: 49.5,\r\n        pickRate: 4.8,\r\n        banRate: 1.2,\r\n        tier: \"B\",\r\n        positions: [\"서폿\"]\r\n    },\r\n    {\r\n        id: \"Amumu\",\r\n        name: \"Amumu\",\r\n        nameKo: \"아무무\",\r\n        title: \"슬픈 미라\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Amumu.png\",\r\n        winRate: 51.8,\r\n        pickRate: 5.6,\r\n        banRate: 2.1,\r\n        tier: \"A\",\r\n        positions: [\"정글\", \"서폿\"]\r\n    },\r\n    {\r\n        id: \"Anivia\",\r\n        name: \"Anivia\",\r\n        nameKo: \"애니비아\",\r\n        title: \"얼음불사조\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Anivia.png\",\r\n        winRate: 52.3,\r\n        pickRate: 3.4,\r\n        banRate: 1.8,\r\n        tier: \"A\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Annie\",\r\n        name: \"Annie\",\r\n        nameKo: \"애니\",\r\n        title: \"어둠의 아이\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Annie.png\",\r\n        winRate: 51.5,\r\n        pickRate: 4.2,\r\n        banRate: 1.1,\r\n        tier: \"A\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Aphelios\",\r\n        name: \"Aphelios\",\r\n        nameKo: \"아펠리오스\",\r\n        title: \"신념의 무기\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Aphelios.png\",\r\n        winRate: 48.2,\r\n        pickRate: 7.8,\r\n        banRate: 3.2,\r\n        tier: \"B\",\r\n        positions: [\"원딜\"]\r\n    },\r\n    {\r\n        id: \"Ashe\",\r\n        name: \"Ashe\",\r\n        nameKo: \"애쉬\",\r\n        title: \"서리 궁수\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Ashe.png\",\r\n        winRate: 50.8,\r\n        pickRate: 15.3,\r\n        banRate: 2.1,\r\n        tier: \"S\",\r\n        positions: [\"원딜\", \"서폿\"]\r\n    },\r\n    {\r\n        id: \"AurelionSol\",\r\n        name: \"Aurelion Sol\",\r\n        nameKo: \"아우렐리온 솔\",\r\n        title: \"별의 forger\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/AurelionSol.png\",\r\n        winRate: 49.9,\r\n        pickRate: 3.1,\r\n        banRate: 4.5,\r\n        tier: \"B\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Azir\",\r\n        name: \"Azir\",\r\n        nameKo: \"아지르\",\r\n        title: \"사막의 황제\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Azir.png\",\r\n        winRate: 47.8,\r\n        pickRate: 6.2,\r\n        banRate: 2.1,\r\n        tier: \"A\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Bard\",\r\n        name: \"Bard\",\r\n        nameKo: \"바드\",\r\n        title: \"영겁의 수호자\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Bard.png\",\r\n        winRate: 50.2,\r\n        pickRate: 5.4,\r\n        banRate: 1.2,\r\n        tier: \"A\",\r\n        positions: [\"서폿\"]\r\n    },\r\n    {\r\n        id: \"Blitzcrank\",\r\n        name: \"Blitzcrank\",\r\n        nameKo: \"블리츠크랭크\",\r\n        title: \"거대 증기 골렘\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Blitzcrank.png\",\r\n        winRate: 51.4,\r\n        pickRate: 12.8,\r\n        banRate: 28.5,\r\n        tier: \"S\",\r\n        positions: [\"서폿\"]\r\n    },\r\n    {\r\n        id: \"Brand\",\r\n        name: \"Brand\",\r\n        nameKo: \"브랜드\",\r\n        title: \"타오르는 복수\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Brand.png\",\r\n        winRate: 50.7,\r\n        pickRate: 6.3,\r\n        banRate: 2.4,\r\n        tier: \"A\",\r\n        positions: [\"서폿\", \"미드\"]\r\n    },\r\n    {\r\n        id: \"Braum\",\r\n        name: \"Braum\",\r\n        nameKo: \"브라움\",\r\n        title: \"프렐요드의 심장\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Braum.png\",\r\n        winRate: 49.5,\r\n        pickRate: 4.1,\r\n        banRate: 0.8,\r\n        tier: \"B\",\r\n        positions: [\"서폿\"]\r\n    },\r\n    {\r\n        id: \"Caitlyn\",\r\n        name: \"Caitlyn\",\r\n        nameKo: \"케이틀린\",\r\n        title: \"필트오버의 보안관\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Caitlyn.png\",\r\n        winRate: 49.8,\r\n        pickRate: 18.2,\r\n        banRate: 8.5,\r\n        tier: \"S\",\r\n        positions: [\"원딜\"]\r\n    },\r\n    {\r\n        id: \"Camille\",\r\n        name: \"Camille\",\r\n        nameKo: \"카밀\",\r\n        title: \"강철의 그림자\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Camille.png\",\r\n        winRate: 50.2,\r\n        pickRate: 7.1,\r\n        banRate: 3.2,\r\n        tier: \"A\",\r\n        positions: [\"탑\"]\r\n    },\r\n    {\r\n        id: \"Cassiopeia\",\r\n        name: \"Cassiopeia\",\r\n        nameKo: \"카시오페아\",\r\n        title: \"독사의 포옹\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Cassiopeia.png\",\r\n        winRate: 51.3,\r\n        pickRate: 4.2,\r\n        banRate: 1.8,\r\n        tier: \"A\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Chogath\",\r\n        name: \"Cho'Gath\",\r\n        nameKo: \"초가스\",\r\n        title: \"공허의 공포\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Chogath.png\",\r\n        winRate: 50.8,\r\n        pickRate: 3.5,\r\n        banRate: 1.1,\r\n        tier: \"B\",\r\n        positions: [\"탑\"]\r\n    },\r\n    {\r\n        id: \"Corki\",\r\n        name: \"Corki\",\r\n        nameKo: \"코르키\",\r\n        title: \"대담한 폭격수\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Corki.png\",\r\n        winRate: 48.5,\r\n        pickRate: 2.8,\r\n        banRate: 0.5,\r\n        tier: \"B\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Darius\",\r\n        name: \"Darius\",\r\n        nameKo: \"다리우스\",\r\n        title: \"녹서스의 실력자\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Darius.png\",\r\n        winRate: 49.8,\r\n        pickRate: 9.5,\r\n        banRate: 15.2,\r\n        tier: \"S\",\r\n        positions: [\"탑\"]\r\n    },\r\n    {\r\n        id: \"Diana\",\r\n        name: \"Diana\",\r\n        nameKo: \"다이애나\",\r\n        title: \"차가운 달의 분노\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Diana.png\",\r\n        winRate: 50.1,\r\n        pickRate: 6.8,\r\n        banRate: 2.4,\r\n        tier: \"A\",\r\n        positions: [\"정글\", \"미드\"]\r\n    },\r\n    {\r\n        id: \"DrMundo\",\r\n        name: \"Dr. Mundo\",\r\n        nameKo: \"문도 박사\",\r\n        title: \"자운의 광인\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/DrMundo.png\",\r\n        winRate: 51.2,\r\n        pickRate: 3.2,\r\n        banRate: 1.1,\r\n        tier: \"B\",\r\n        positions: [\"탑\", \"정글\"]\r\n    },\r\n    {\r\n        id: \"Draven\",\r\n        name: \"Draven\",\r\n        nameKo: \"드레이븐\",\r\n        title: \"화려한 처형자\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Draven.png\",\r\n        winRate: 50.5,\r\n        pickRate: 5.8,\r\n        banRate: 4.2,\r\n        tier: \"A\",\r\n        positions: [\"원딜\"]\r\n    },\r\n    {\r\n        id: \"Ekko\", name: \"Ekko\", nameKo: \"에코\",\r\n        title: \"시간을 달리는 소년\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Ekko.png\",\r\n        winRate: 50.5, pickRate: 7.8, banRate: 4.2, tier: \"A\",\r\n        positions: [\"정글\", \"미드\"]\r\n    },\r\n    {\r\n        id: \"Elise\", name: \"Elise\", nameKo: \"엘리스\",\r\n        title: \"거미 여왕\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Elise.png\",\r\n        winRate: 51.2, pickRate: 4.5, banRate: 2.1, tier: \"A\",\r\n        positions: [\"정글\"]\r\n    },\r\n    {\r\n        id: \"Evelynn\", name: \"Evelynn\", nameKo: \"이블린\",\r\n        title: \"고통스러운 포옹\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Evelynn.png\",\r\n        winRate: 50.8, pickRate: 5.2, banRate: 3.8, tier: \"A\",\r\n        positions: [\"정글\"]\r\n    },\r\n    {\r\n        id: \"Ezreal\", name: \"Ezreal\", nameKo: \"이즈리얼\",\r\n        title: \"방탕한 탐험가\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Ezreal.png\",\r\n        winRate: 49.5, pickRate: 22.5, banRate: 8.2, tier: \"S\",\r\n        positions: [\"원딜\"]\r\n    },\r\n    {\r\n        id: \"Fiddlesticks\", name: \"Fiddlesticks\", nameKo: \"피들스틱\",\r\n        title: \"고대의 공포\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Fiddlesticks.png\",\r\n        winRate: 51.5, pickRate: 3.2, banRate: 1.5, tier: \"A\",\r\n        positions: [\"정글\"]\r\n    },\r\n    {\r\n        id: \"Fiora\", name: \"Fiora\", nameKo: \"피오라\",\r\n        title: \"결투가\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Fiora.png\",\r\n        winRate: 50.2, pickRate: 8.5, banRate: 7.2, tier: \"S\",\r\n        positions: [\"탑\"]\r\n    },\r\n    {\r\n        id: \"Fizz\", name: \"Fizz\", nameKo: \"피즈\",\r\n        title: \"대양의 말썽꾸러기\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Fizz.png\",\r\n        winRate: 51.8, pickRate: 5.8, banRate: 8.5, tier: \"A\",\r\n        positions: [\"미드\"]\r\n    },\r\n    {\r\n        id: \"Galio\", name: \"Galio\", nameKo: \"갈리오\",\r\n        title: \"위대한 석상\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Galio.png\",\r\n        winRate: 49.8, pickRate: 3.5, banRate: 0.8, tier: \"B\",\r\n        positions: [\"미드\", \"서폿\"]\r\n    },\r\n    {\r\n        id: \"Gangplank\", name: \"Gangplank\", nameKo: \"갱플랭크\",\r\n        title: \"바다의 무법자\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Gangplank.png\",\r\n        winRate: 48.5, pickRate: 6.2, banRate: 3.2, tier: \"A\",\r\n        positions: [\"탑\"]\r\n    },\r\n    {\r\n        id: \"Garen\", name: \"Garen\", nameKo: \"가렌\",\r\n        title: \"데마시아의 힘\",\r\n        imageUrl: \"https://ddragon.leagueoflegends.com/cdn/13.24.1/img/champion/Garen.png\",\r\n        winRate: 51.2, pickRate: 7.8, banRate: 1.5, tier: \"A\",\r\n        positions: [\"탑\"]\r\n    },\r\n    // ... (계속해서 H부터 Z까지 추가)\r\n];\r\n\r\n// 초성 추출 함수\r\nexport const getInitialSound = (text: string) => {\r\n    const initialCodes = [\r\n        'ㄱ', 'ㄲ', 'ㄴ', 'ㄷ', 'ㄸ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅃ', \r\n        'ㅅ', 'ㅆ', 'ㅇ', 'ㅈ', 'ㅉ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'\r\n    ];\r\n    \r\n    const code = text.charCodeAt(0) - 0xAC00;\r\n    if (code < 0) return text[0];\r\n    \r\n    const initialCode = Math.floor(code / 28 / 21);\r\n    return initialCodes[initialCode] || text[0];\r\n};\r\n\r\n// 챔피언 필터링 함수\r\nexport const filterChampions = (\r\n    champions: Champion[],\r\n    initial: string,\r\n    position: string,\r\n    searchTerm: string\r\n): Champion[] => {\r\n    return champions.filter(champion => {\r\n        // 초성 필터\r\n        if (initial !== '전체') {\r\n            const championInitial = getInitialSound(champion.nameKo);\r\n            if (championInitial !== initial) return false;\r\n        }\r\n\r\n        // 포지션 필터\r\n        if (position !== '전체' && !champion.positions.includes(position)) {\r\n            return false;\r\n        }\r\n\r\n        // 검색어 필터\r\n        if (searchTerm) {\r\n            const searchLower = searchTerm.toLowerCase();\r\n            return (\r\n                champion.nameKo.toLowerCase().includes(searchLower) ||\r\n                champion.name.toLowerCase().includes(searchLower)\r\n            );\r\n        }\r\n\r\n        return true;\r\n    });\r\n};\r\n\r\n// 챔피언 정렬 함수\r\nexport const sortChampions = (\r\n    champions: Champion[],\r\n    sortBy: string\r\n): Champion[] => {\r\n    return [...champions].sort((a, b) => {\r\n        switch (sortBy) {\r\n            case 'winRate':\r\n                return b.winRate - a.winRate;\r\n            case 'pickRate':\r\n                return b.pickRate - a.pickRate;\r\n            case 'banRate':\r\n                return b.banRate - a.banRate;\r\n            case 'tier':\r\n                return a.tier.localeCompare(b.tier);\r\n            default:\r\n                return 0;\r\n        }\r\n    });\r\n}; ","import React from 'react';\r\nimport { Champion } from '../data/champions';\r\nimport './ChampionCard.css';\r\n\r\ninterface ChampionCardProps {\r\n    champion: Champion;\r\n    onClick: (champion: Champion) => void;\r\n}\r\n\r\nexport const ChampionCard: React.FC<ChampionCardProps> = ({ champion, onClick }) => {\r\n    return (\r\n        <div className=\"champion-card\" onClick={() => onClick(champion)}>\r\n            <div className=\"champion-image\">\r\n                <img src={champion.imageUrl} alt={champion.nameKo} />\r\n                <span className={`tier tier-${champion.tier.toLowerCase()}`}>{champion.tier}</span>\r\n            </div>\r\n            <div className=\"champion-info\">\r\n                <h3>{champion.nameKo}</h3>\r\n                <div className=\"positions\">\r\n                    {champion.positions.map(position => (\r\n                        <img \r\n                            key={position}\r\n                            src={`/images/positions/${position.toLowerCase()}.svg`}\r\n                            alt={position}\r\n                            className=\"position-icon\"\r\n                        />\r\n                    ))}\r\n                </div>\r\n                <div className=\"stats\">\r\n                    <span className=\"win-rate\">승률 {champion.winRate.toFixed(1)}%</span>\r\n                    <span className=\"pick-rate\">픽률 {champion.pickRate.toFixed(1)}%</span>\r\n                    <span className=\"ban-rate\">밴률 {champion.banRate.toFixed(1)}%</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}; ","import axios from 'axios';\r\nimport { Champion } from '../data/champions';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080';\r\n\r\nexport const getChampionStats = async (): Promise<Champion[]> => {\r\n    try {\r\n        const response = await axios.get<Champion[]>(`${API_BASE_URL}/api/champions/stats`);\r\n        return response.data.map(champion => ({\r\n            ...champion,\r\n            winRate: Number(champion.winRate.toFixed(1)),\r\n            pickRate: Number(champion.pickRate.toFixed(1)),\r\n            banRate: Number(champion.banRate.toFixed(1))\r\n        }));\r\n    } catch (error) {\r\n        console.error('Failed to fetch champion stats:', error);\r\n        throw error;\r\n    }\r\n};","import React, { useState, useEffect } from 'react';\r\nimport { Champion, champions, filterChampions, sortChampions } from '../data/champions';\r\nimport { ChampionCard } from './ChampionCard';\r\nimport './ChampionAnalysis.css';\r\nimport { getChampionStats } from '../services/championService';\r\n\r\nexport const ChampionAnalysis: React.FC = () => {\r\n    const [champions, setChampions] = useState<Champion[]>([]);\r\n    const [filteredChampions, setFilteredChampions] = useState<Champion[]>([]);\r\n    const [selectedInitial, setSelectedInitial] = useState('전체');\r\n    const [filter, setFilter] = useState('전체');\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [sortBy, setSortBy] = useState('tier');\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState<string | null>(null);\r\n\r\n    const initials = ['전체', 'ㄱ', 'ㄴ', 'ㄷ', 'ㄹ', 'ㅁ', 'ㅂ', 'ㅅ', 'ㅇ', 'ㅈ', 'ㅊ', 'ㅋ', 'ㅌ', 'ㅍ', 'ㅎ'];\r\n    const positions = ['전체', '탑', '정글', '미드', '원딜', '서폿'];\r\n\r\n    useEffect(() => {\r\n        const fetchChampionStats = async () => {\r\n            try {\r\n                setIsLoading(true);\r\n                const stats = await getChampionStats();\r\n                setChampions(stats);\r\n                setFilteredChampions(stats);\r\n            } catch (err) {\r\n                setError('챔피언 데이터를 불러오는데 실패했습니다.');\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchChampionStats();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (champions.length > 0) {\r\n            let filtered = filterChampions(champions, selectedInitial, filter, searchTerm);\r\n            filtered = sortChampions(filtered, sortBy);\r\n            setFilteredChampions(filtered);\r\n        }\r\n    }, [champions, selectedInitial, filter, searchTerm, sortBy]);\r\n\r\n    const handleChampionClick = (champion: Champion) => {\r\n        // 추후 구현: 챔피언 상세 정보 표시\r\n        console.log('Selected champion:', champion);\r\n    };\r\n\r\n    return (\r\n        <div className=\"champion-analysis\">\r\n            {isLoading ? (\r\n                <div className=\"loading\">데이터를 불러오는 중...</div>\r\n            ) : error ? (\r\n                <div className=\"error\">{error}</div>\r\n            ) : (\r\n                <>\r\n                    <div className=\"champion-sidebar\">\r\n                        <div className=\"initial-filters\">\r\n                            {initials.map(initial => (\r\n                                <button \r\n                                    key={initial}\r\n                                    className={`initial-btn ${selectedInitial === initial ? 'active' : ''}`}\r\n                                    onClick={() => setSelectedInitial(initial)}\r\n                                >\r\n                                    {initial}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"champion-main\">\r\n                        <div className=\"champion-filters\">\r\n                            <div className=\"filter-header\">\r\n                                <div className=\"position-filters\">\r\n                                    {positions.map(pos => (\r\n                                        <button \r\n                                            key={pos}\r\n                                            className={`position-btn ${filter === pos ? 'active' : ''}`}\r\n                                            onClick={() => setFilter(pos)}\r\n                                        >\r\n                                            {pos === '전체' ? pos : (\r\n                                                <img \r\n                                                    src={`/images/positions/${pos.toLowerCase()}.svg`} \r\n                                                    alt={pos} \r\n                                                    title={pos}\r\n                                                />\r\n                                            )}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                                <div className=\"search-sort\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"챔피언 검색\"\r\n                                        value={searchTerm}\r\n                                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                                        className=\"champion-search\"\r\n                                    />\r\n                                    <select \r\n                                        value={sortBy} \r\n                                        onChange={(e) => setSortBy(e.target.value)}\r\n                                        className=\"sort-select\"\r\n                                    >\r\n                                        <option value=\"tier\">티어 순</option>\r\n                                        <option value=\"winRate\">승률 순</option>\r\n                                        <option value=\"pickRate\">픽률 순</option>\r\n                                        <option value=\"banRate\">밴률 순</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"champion-grid\">\r\n                            {filteredChampions.map(champion => (\r\n                                <ChampionCard \r\n                                    key={champion.id}\r\n                                    champion={champion}\r\n                                    onClick={handleChampionClick}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n}; ","import React, { useState } from 'react'; // React와 상태 관리를 위한 useState 훅을 가져옴\nimport './App.css';  // 이 줄 추가\nimport { Header } from './components/Header';\nimport { SearchBar } from './components/SearchBar'; // 검색창 컴포넌트\nimport { MatchHistory } from './components/MatchHistory'; // 매치 히스토리 표시 컴포넌트\nimport { RiotService } from './services/riotService'; // API 호출을 위한 서비스\nimport './styles/main.css'; // 스타일시트 import\nimport { Match } from './types/Match';\nimport { SummonerProfile } from './components/SummonerProfile';\nimport { SummonerContent } from './components/SummonerContent';\nimport { NavigationTabs } from './components/NavigationTabs';\nimport { ChampionAnalysis } from './components/ChampionAnalysis';\n\n// 메인 App 컴포넌트\nconst App: React.FC = () => {\n    const [matches, setMatches] = useState<Match[]>([]);\n    const [summonerName, setSummonerName] = useState<string>('');\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n    const [rank, setRank] = useState<any>(null);\n    const [currentGame, setCurrentGame] = useState<any>(null);\n    const [activeTab, setActiveTab] = useState<'overview' | 'champions' | 'ingame'>('overview');\n\n    const riotService = new RiotService();\n\n    const handleSearch = async (name: string) => {\n        setSummonerName(name);\n        setIsLoading(true);\n        setError(null);\n        try {\n            const summonerData = await riotService.getSummonerByName(name);\n            const rankData = await riotService.getSummonerRank(summonerData.id);\n            const gameData = await riotService.getCurrentGame(summonerData.id);\n            const matchHistory = await riotService.getMatchHistory(name);\n            \n            setRank(rankData);\n            setCurrentGame(gameData);\n            setMatches(matchHistory);\n        } catch (error) {\n            setError('소환사를 찾을 수 없습니다. 소환사명을 확인해주세요.');\n            setMatches([]);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    // 현재 경로 확인\n    const path = window.location.pathname;\n\n    return (\n        <div className=\"app\">\n            <Header onSearch={handleSearch} />\n            {path === '/champions' ? (\n                <ChampionAnalysis />\n            ) : (\n                <>\n                    {isLoading && <div className=\"loading\">검색중...</div>}\n                    {error && <div className=\"error-message\">{error}</div>}\n                    {summonerName && !error && (\n                        <div className=\"content\">\n                            <SummonerProfile summonerName={summonerName} />\n                            <NavigationTabs onTabChange={setActiveTab} />\n                            <div className=\"main-content\">\n                                <SummonerContent \n                                    rank={rank}\n                                    currentGame={currentGame}\n                                />\n                                {activeTab === 'overview' && <MatchHistory matches={matches} />}\n                                {activeTab === 'champions' && <div>챔피언 정보</div>}\n                                {activeTab === 'ingame' && <div>인게임 정보</div>}\n                            </div>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles/main.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n); "],"sourceRoot":""}